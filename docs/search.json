[
  {
    "objectID": "posts/NHL draft analytics/index.html",
    "href": "posts/NHL draft analytics/index.html",
    "title": "ASSIGNMENT 5",
    "section": "",
    "text": "In this assignment, I am going to practice creating visualizations for tabular data.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\n\nNHLDraft<-read.csv(\"NHLDraft.csv\")\nNHLDictionary<-read_excel(\"NHLDictionary.xlsx\")\n\nknitr::kable(NHLDictionary)\n\n\n\n\n\n\n\n\n\n\nAttribute\nType\nDescription\n\n\n\n\ndraftyear\nOrdinal\nCalendar year in which the player was drafted into the NHL.\n\n\nname\nItem\nFull name of the player.\n\n\nround\nOrdinal\nRound in which the player was drafted (1 to 7).\n\n\noverall\nOrdinal\nOverall draft position of the player (1 to 224)\n\n\npickinRound\nOrdinal\nPosition in which the player was drafted in their round (1 to 32).\n\n\nheight\nQuantitative\nPlayer height in inches.\n\n\nweight\nQuantitative\nPlayer weight in pounds.\n\n\nposition\nCategorical\nPlayer position (Forward, Defense, Goaltender)\n\n\nplayerId\nItem\nUnique ID (key) assigned to each player.\n\n\npostdraft\nOrdinal\nNumber of seasons since being drafted (0 to 20).\n\n\nNHLgames\nQuantitative\nNumber of games played in the NHL in that particular season (regular season is 82 games, playoffs are up to 28 more).\n\n\n\n\n\nIn this case, we have a dataframe with all the NHL drafted players since 2000, their position, their draft year and position, and then rows for each season since being drafted (postdraft). The key variable here is NHLgames, which tells us how many games they played in the NHL each season since being drafted.\nThe data dictionary above describes the items and attributes in the data."
  },
  {
    "objectID": "posts/NHL draft analytics/index.html#simple-scatterplot",
    "href": "posts/NHL draft analytics/index.html#simple-scatterplot",
    "title": "ASSIGNMENT 5",
    "section": "SIMPLE SCATTERPLOT",
    "text": "SIMPLE SCATTERPLOT\nOne thing to realize about professional hockey is that it is pretty rare for a player to play in the NHL right after being drafted. Players get drafted when they are 18 years old, and they usually play in the juniors, minor leagues, or the NCAA for a bit to further develop.\nBelow is a scatter plot to visualize this phenomenon with the most recent draft classes.\n\n\nCode\ndraft2022<-NHLDraft%>%\n  filter(draftyear==2022 & postdraft==0)\n\nggplot(draft2022, aes(x=round, y=NHLgames))+\n  geom_point()\n\n\n\n\n\nAs observed, the players drafted in June of 2022 haven’t played much this season. There are few things wrong with this visualization, however:\n\nOverplotting. All those points on the y=0 line represent about 32 players each. Can you think of a way that adding extra channels might help?\nLabelling. Can we create a solid figure caption and better axis labels for this figure? In your caption, please specify the task(s) the visualizaiton is intended to facilitate, as well as the marks, channels, and key-value pairs used.\nKey-Value pairs: Looks like we are using “round” as a continuous variable. Can we change this to an ordered factor?"
  },
  {
    "objectID": "posts/NHL draft analytics/index.html#expanded-scatterplot",
    "href": "posts/NHL draft analytics/index.html#expanded-scatterplot",
    "title": "ASSIGNMENT 5",
    "section": "EXPANDED SCATTERPLOT",
    "text": "EXPANDED SCATTERPLOT\nThe data from the most recent draft isn’t really helpful for our question. Therefore,it would be better to go back in time and use a draft year that has had some time to develop and reach their potential.\nHence, it will be better to use the 2018 data to achieve this purpose.\n\n\nCode\ndraft2018<-NHLDraft%>%\n  filter(draftyear==2018 & postdraft<6)\n\nggplot(draft2018, aes(x=round, y=NHLgames))+\n  geom_point()+\n  labs(\n    title = \"Number of games played by drafted players in different round picks\",\n    x = \"round\",\n    y = \"NHLgames\"\n  )\n\n\n\n\n\nIn addition to the problem of overplotting, we’ve got an additional issue here. We actually have two keys and one attribute. The attribute is NHLgames, and the keys are round and postdraft, but we are only using round.\nThere are options to explore here. A visualization that uses both keys could be made, or alternatively, summarize the data for one of the keys.\nThe figure before summarizes the data for the TOTAL number of NHL games played since being drafted.\n\n\nCode\ndrafttot2018<- draft2018%>%\n  group_by(playerId, round, overall, position, name)%>%\n  summarise(totgames=sum(NHLgames))\n\n\n`summarise()` has grouped output by 'playerId', 'round', 'overall', 'position'.\nYou can override using the `.groups` argument.\n\n\nCode\nggplot(drafttot2018, aes(x=round, y=totgames))+\n  geom_point()\n\n\n\n\n\nCode\nggplot(drafttot2018, aes(x=reorder(name,overall), y=totgames))+\n  geom_col(aes(fill=as.factor(round)))+\n  scale_x_discrete(labels = NULL)+\n  labs(\n    title = \"Total number of games played by drafted players\",\n    x = \"Overall draft position\",\n    y = \"Total games played\"\n  )\n\n\n\n\n\nOne of the best ways to deal with overplotting is to use our keys to SEPARATE and ORDER our data. Unlike in the scatterplots that had several overlaps that made it difficult to distinguish the variables in the data, the column chart above clearly shows the differences in the number of games players drafted in different rounds played using colour as an additional distinguishing factor."
  },
  {
    "objectID": "posts/NHL draft analytics/index.html#stacked-bar-chart",
    "href": "posts/NHL draft analytics/index.html#stacked-bar-chart",
    "title": "ASSIGNMENT 5",
    "section": "STACKED BAR CHART",
    "text": "STACKED BAR CHART\nStacked bar charts use two keys and one value. Leveraging this idiom, both round and postdraft will be used as as the keys and NHLgames as the value…\nThe idea here is that we might be able to get a sense of the temporal pattern of NHL games after a player is drafted. This seeks to answer questions on whether first round picks join the NHL earlier and how long they stay in the NHL?\n\n\nCode\nggplot(NHLDraft, aes(x = postdraft, y=NHLgames, fill=as.factor(round)))+\n  geom_col(position = \"stack\")+\n  labs(\n    title = \"Player perfomance after being drafted\",\n    x = \"postdraft\",\n    y = \"NHLgames\"\n  )"
  },
  {
    "objectID": "posts/NHL draft analytics/index.html#pie-charts-normalized-bar-charts",
    "href": "posts/NHL draft analytics/index.html#pie-charts-normalized-bar-charts",
    "title": "ASSIGNMENT 5",
    "section": "PIE CHARTS / NORMALIZED BAR CHARTS",
    "text": "PIE CHARTS / NORMALIZED BAR CHARTS\nWe all know that Pie Charts are rarely a good choice, but let’s look at how to make one here. I’ll eliminate all the players drafted in 2018 who never played an NHL game, leaving us 80 players drafted in that year who made “THE SHOW”. Let’s look at how those 80 players were drafted:\n\n\nCode\nplayedNHL2018 <- drafttot2018%>%\n  filter(totgames>0)\n\nggplot(playedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")\n\n\n\n\n\nThis visualization is not great. In that, it is impossible to do a comparison between a player who has played hundreds of games in their first five years and one that has played one game in five years.\nConsidering the data type and size, a pie chart does not describe it adequately and thus makes it impossible to make good inferences of the variables from the visualization of which the relative value of second and third round picks are examples.\nLooking at the pie chart, it mainly talks describes size/ percentages. However, that is not the intended assessment being made hence making it inappropriate to use.\nI would say that at a glance the pie chart describes the number of players that were first round picks, second round picks, and so on. moreover, x and y axis of the pie chart illustrated above are redundant.\nChanging this to account for the various years post draft:\n\n\nCode\nseasonplayedNHL2018 <- draft2018%>%\n  filter(NHLgames>0)\n\n\nggplot(seasonplayedNHL2018, aes(x = \"\", fill = factor(round))) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\")+\n  facet_wrap(~postdraft)"
  },
  {
    "objectID": "posts/NHL draft analytics/index.html#heatmap",
    "href": "posts/NHL draft analytics/index.html#heatmap",
    "title": "ASSIGNMENT 5",
    "section": "HEATMAP?",
    "text": "HEATMAP?\nCould this be useful?\n\n\nCode\nround1<-NHLDraft%>%\n  filter(round==1)\n\nggplot(round1, aes(y = reorder(name, overall), x = postdraft, fill = NHLgames)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"blue\", high = \"red\")"
  },
  {
    "objectID": "posts/NHL draft analytics/index.html#conclusion",
    "href": "posts/NHL draft analytics/index.html#conclusion",
    "title": "ASSIGNMENT 5",
    "section": "CONCLUSION",
    "text": "CONCLUSION\nBased on the visualizations, I would advise that trading a first-round pick for two second-round picks and one third-round pick, although dicey, could be likened to shooting yourself in the foot.\nIn as much as the performance of first round picks are unquestionable, it is obvious that given the chance, second and third round picks, may also perform well if they have more play time postdraft. Moreover, Therefore the team is better off with a good number of players who can produce results rather than depending on one person to make the team perform better."
  },
  {
    "objectID": "posts/post-with-code/RB-A2-Annotation.html",
    "href": "posts/post-with-code/RB-A2-Annotation.html",
    "title": "Assignment2",
    "section": "",
    "text": "Note\n\n\n\nI added additional content to your YAML header. Your name, date, the course information are important and should be included in all future assignements. Also added the code options."
  },
  {
    "objectID": "posts/post-with-code/RB-A2-Annotation.html#my-dataset",
    "href": "posts/post-with-code/RB-A2-Annotation.html#my-dataset",
    "title": "Assignment2",
    "section": "My dataset",
    "text": "My dataset\nThis is a data set collected during my Masters degree research. The data contains information on livestock and the ticks collected off them. The ticks were subsequently identified morphologically and the pathogens that these ticks harbored were identified using PCR on extracted nucleic acid.\nI’m putting this dataset together in response to Assignment 2 from the BCB 504 class."
  },
  {
    "objectID": "posts/post-with-code/RB-A2-Annotation.html#data-collection",
    "href": "posts/post-with-code/RB-A2-Annotation.html#data-collection",
    "title": "Assignment2",
    "section": "Data collection",
    "text": "Data collection\nThe data were collected from two parts of Ghana (Greater Accra in the South and Upper East in the North). Sampling sites were carefully chosen based on known climate and environmental conditions that influence arthropods and their ability to transmit pathogens.\n\n\n\n\n\n\nNote\n\n\n\nI cleaned up some of the writing in the preceding sections. Below, I renamed your data file to just Ronald.xlsx. Your previous data file had parentheses in the name, which can cause major problems in automated data analyses and visualizations. I would also advise that you start thinking about a coherent naming convention for your data files. Something that contains information about the data itself, such as RB_MSThesisData_Date.xlsx . Also got rid of the View() statement as it was redundant with glimpse().\n\n\n\n\n\n\nData\nThe following shows the basic formatting of the data file using the glimpse() function:\n\n\nCode\ntickdata<-Results_For_Ronald_\nglimpse(tickdata)\n\n\nRows: 706\nColumns: 15\n$ Date                 <chr> \"28/01/2020\", NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Field ID`           <chr> \"GVS-A-T-001\", NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Location             <chr> \"Burma Camp\", NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Animal               <chr> \"Cattle\", \"Cattle\", \"Cattle\", \"Cattle\", \"Cattle\",…\n$ `Animal Sex`         <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Female\",…\n$ `Age (years)`        <chr> \"4\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ `Body Part`          <chr> \"Anal\", \"Anal\", \"Anal\", \"Anal\", \"Anal\", \"Anal\", \"…\n$ `Vector count`       <dbl> 10, NA, NA, NA, NA, NA, NA, NA, NA, NA, 2, NA, 3,…\n$ `Vector Sex`         <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Male\", \"…\n$ `Lab ID`             <chr> \"T001\", \"T002\", \"T003\", \"T004\", \"T005\", \"T006\", \"…\n$ `RNA Extracted`      <chr> \"RNA1\", \"RNA2\", \"RNA3\", \"RNA4\", \"RNA5\", \"RNA6\", \"…\n$ Species              <chr> \"Hyalomma rufipes\", \"Hyalomma rufipes\", \"Hyalomma…\n$ `Rickettsia `        <chr> \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"…\n$ `Rickettsia africae` <chr> \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"…\n$ CCHFV                <chr> \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"…\n\n\nNote that some of the Attributes have NA entries. This is a consequence of the data file, and I will fill in those entries and move the data file toward a TidyData format as I progress through the course.\nBelow is the data dictionary for my data file:\n\n\nCode\n tickdata_attributes <- read_excel(\"TickData_Attributes.xlsx\")\n options(knitr.kable.NA = '')\n knitr::kable(tickdata_attributes,caption='Data Dictionary for the data file Ronald.xlsx')\n\n\n\nData Dictionary for the data file Ronald.xlsx\n\n\n\n\n\n\n\nAttribute\nType\nNote\n\n\n\n\n\n\n\n\n\nDate\nOrdinal\nDay sampling was done\n\n\nField ID\nOrdinal\nUnique ID given to livestock from which ticks were off on the field\n\n\nLocation\nCategorical\nLocation from which sampling was done\n\n\nAnimal\nCategorical\nType of livestock samplng tick sampling was done on\n\n\nAnimal sex\nCategorical\nGender of livestock sampling was done\n\n\nAge (years)\nOrdinal\nAge of livestock tick sampling was done\n\n\nBody part\nCategorical\nPart of livestock ticks were collected\n\n\nVector count\nQuantitative\nNumber of ticks per livestock\n\n\nVector sex\nQuantitative\nSex of tick\n\n\nLab ID\nOrdinal\nUnique ID given to tick in the lab after morphological identification\n\n\nRNA extracted\nOrdinal\nUnique ID given to tick extracts in the lab\n\n\nSpecies\nCategorical\nSpecies of morphologically identified ticks\n\n\nRickettsia\nQuantitative\nResults of tick extracts after PCR to detect Rickettsia\n\n\nRickettsia africae\nQuantitative\nResults of tick extracts after PCR to detect Rickettsia africae\n\n\nCCHFV\nQuantitative\nResults of tick extracts after PCR to detect CCHFV\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSuppressed the NA results in your dictionairy with the options() code, and added a caption to your table."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Assignment 3",
    "section": "",
    "text": "This is a data set collected during my Masters degree research. The data contains information on livestock and the ticks collected off them. The ticks were subsequently identified morphologically and the pathogens that these ticks harbored were identified using PCR on extracted nucleic acid.\nI’m putting this dataset together in response to [Assignment 2](https://professorpolymorphic.github.io/RobisonWebSite/BCB520/posts/A2-YourData/) from the [BCB 504](https://professorpolymorphic.github.io/RobisonWebSite/BCB520/BCB520.html) class."
  },
  {
    "objectID": "posts/post-with-code/index.html#data-collection",
    "href": "posts/post-with-code/index.html#data-collection",
    "title": "Assignment 3",
    "section": "Data collection",
    "text": "Data collection\nThe data were collected from two parts of Ghana (Greater Accra in the South and Upper East in the North). Sampling sites were carefully chosen based on known climate and environmental conditions that influence arthropods and their ability to transmit pathogens."
  },
  {
    "objectID": "posts/post-with-code/index.html#data",
    "href": "posts/post-with-code/index.html#data",
    "title": "Assignment 3",
    "section": "Data",
    "text": "Data\nThe following shows the basic formatting of the data file using the `glimpse()` function:\n\n\nCode\nglimpse(tickdata)\n\n\nRows: 706\nColumns: 15\n$ Date                 <chr> \"28/01/2020\", NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FieldID              <chr> \"GVS-A-T-001\", NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ Location             <chr> \"Burma Camp\", NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ Animal               <chr> \"Cattle\", \"Cattle\", \"Cattle\", \"Cattle\", \"Cattle\",…\n$ AnimalSex            <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Female\",…\n$ `Age (years)`        <chr> \"4\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ BodyPart             <chr> \"Anal\", \"Anal\", \"Anal\", \"Anal\", \"Anal\", \"Anal\", \"…\n$ Vectorcount          <dbl> 10, NA, NA, NA, NA, NA, NA, NA, NA, NA, 2, NA, 3,…\n$ `Vector Sex`         <chr> \"Female\", \"Female\", \"Female\", \"Female\", \"Male\", \"…\n$ `Lab ID`             <chr> \"T001\", \"T002\", \"T003\", \"T004\", \"T005\", \"T006\", \"…\n$ `RNA Extracted`      <chr> \"RNA1\", \"RNA2\", \"RNA3\", \"RNA4\", \"RNA5\", \"RNA6\", \"…\n$ Species              <chr> \"Hyalomma rufipes\", \"Hyalomma rufipes\", \"Hyalomma…\n$ `Rickettsia `        <chr> \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"…\n$ `Rickettsia africae` <chr> \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"…\n$ CCHFV                <chr> \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"…\n\n\nNote that some of the Attributes have `NA` entries. This is a consequence of the data file, and I will fill in those entries and move the data file toward a\n[TidyData](https://towardsdatascience.com/what-is-tidy-data-d58bb9ad2458) format as I progress through the course.\nBelow is the data dictionary for my data file:\n\n\nCode\ntickdata_attributes <- read_excel(\"TickData_Attributes.xlsx\")\n options(knitr.kable.NA = '')\n knitr::kable(tickdata_attributes,caption='Data Dictionary for the data file Ronald.xlsx')\n\n\n\nData Dictionary for the data file Ronald.xlsx\n\n\n\n\n\n\n\nAttribute\nType\nNote\n\n\n\n\n\n\n\n\n\nDate\nOrdinal\nDay sampling was done\n\n\nField ID\nOrdinal\nUnique ID given to livestock from which ticks were off on the field\n\n\nLocation\nCategorical\nLocation from which sampling was done\n\n\nAnimal\nCategorical\nType of livestock samplng tick sampling was done on\n\n\nAnimal sex\nCategorical\nGender of livestock sampling was done\n\n\nAge (years)\nOrdinal\nAge of livestock tick sampling was done\n\n\nBody part\nCategorical\nPart of livestock ticks were collected\n\n\nVector count\nQuantitative\nNumber of ticks per livestock\n\n\nVector sex\nQuantitative\nSex of tick\n\n\nLab ID\nOrdinal\nUnique ID given to tick in the lab after morphological identification\n\n\nRNA extracted\nOrdinal\nUnique ID given to tick extracts in the lab\n\n\nSpecies\nCategorical\nSpecies of morphologically identified ticks\n\n\nRickettsia\nQuantitative\nResults of tick extracts after PCR to detect Rickettsia\n\n\nRickettsia africae\nQuantitative\nResults of tick extracts after PCR to detect Rickettsia africae\n\n\nCCHFV\nQuantitative\nResults of tick extracts after PCR to detect CCHFV"
  },
  {
    "objectID": "posts/post-with-code/index.html#data-abstraction",
    "href": "posts/post-with-code/index.html#data-abstraction",
    "title": "Assignment 3",
    "section": "Data Abstraction",
    "text": "Data Abstraction\nPer this assignment, my ACTION TARGET pair is: Annotate Distribution\nBelow, I am going to create a visualization of the distribution of ticks species. This is to create a total count of the different species of ticks.\n\n\nCode\nlibrary(ggplot2)\nggplot(tickdata, aes(x=Species)) +\n    geom_bar(colour=\"blue\", fill=\"grey\", stat=\"count\")+\n  theme(axis.text.x=element_text(angle = -90, hjust = 0))\n\n\n\n\n\nMy second ACTION TARGET pair would be to further Discover the distribution of tick abundance on livestock\n\n\nCode\nggplot(tickdata, aes(x=Vectorcount)) +\n    geom_bar(colour=\"blue\", fill=\"grey\", stat=\"count\")+\n  theme(axis.text.x=element_text(angle = -90, hjust = 0))\n\n\nWarning: Removed 492 rows containing non-finite values (`stat_count()`).\n\n\n\n\n\nEarlier, I indicated the existence of some `NA` entries in some of the attributes. The loop below was created by my super cool Professor to fill in the ‘missing’ data to be able to ascertain whether this distribution varies among tick species, since it is evident that the total counts per figure above are different.\n\n\nCode\nfor (i in 1:length(tickdata$FieldID)) {\n  if (is.na(tickdata$FieldID[i])==TRUE) {\n\n    tickdata$FieldID[i]<-tickdata$FieldID[i-1]\n    tickdata$Date[i]<-tickdata$Date[i-1]\n    tickdata$Location[i]<-tickdata$Location[i-1]\n    tickdata$Ageyears[i]<-tickdata$Ageyears[i-1]\n  }\n  if (is.na(tickdata$Vectorcount[i])==TRUE) {\n    tickdata$Vectorcount[i]<-tickdata$Vectorcount[i-1]\n  }\n}\n\n\nWarning: Unknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\nUnknown or uninitialised column: `Ageyears`.\n\n\nHaving done this, I can now visualize my vector count (number of ticks per livestock), grouped per tick species below. This confirms that that the distribution of ticks on livestock varied among tick species.\n\n\nCode\nggplot(tickdata, aes(x=Vectorcount)) + \n    geom_bar(colour=\"blue\", fill=\"grey\", stat=\"count\")+\n  facet_wrap(~Species)+\n  theme(axis.text.x=element_text(angle = -90, hjust = 0))"
  },
  {
    "objectID": "posts/Network data/index.html",
    "href": "posts/Network data/index.html",
    "title": "Practice with Network Data",
    "section": "",
    "text": "In this assignment, we’ll consider some of the tools and techniques for visualizing network data. Network data is characterized by two unique items that are not found in tabular or spatial data - Nodes and Links. In addition, there is a sub-type of network data that we will consider - Hierarchical or Tree data. Let’s practice a few visualizations to get a feel for how these things work!"
  },
  {
    "objectID": "posts/Network data/index.html#igraph",
    "href": "posts/Network data/index.html#igraph",
    "title": "Practice with Network Data",
    "section": "IGRAPH",
    "text": "IGRAPH\nLet’s start with igraph, which is an open source toolset for network analysis. The great thing about igraph is that you can use these tools in R, Python, Mathematica, and C++. It is very flexible and very powerful.\n\nigraph in R\nFirst up, we’ll install R/igraph and load the library (note that I’ve commented out the package installation because I’ve already installed igraph on my machine):\n\n\nCode\n# install.packages(\"igraph\")\nlibrary(igraph)\n\n\n\nAttaching package: 'igraph'\n\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\n\nThe following object is masked from 'package:base':\n\n    union\n\n\nNow I’m going to walk you through a modified version of the igraph tutorial, which you can find here"
  },
  {
    "objectID": "posts/Network data/index.html#creating-a-graph",
    "href": "posts/Network data/index.html#creating-a-graph",
    "title": "Practice with Network Data",
    "section": "Creating a graph",
    "text": "Creating a graph\nigraph offers many ways to create a graph. The simplest one is the function make_empty_graph:\n\n\nCode\ng <- make_empty_graph()\n\n\nThe most common way to create a graph is make_graph, which constructs a network based on specified edges. For example, to make a graph with 10 nodes (numbered 1 to 10) and two edges connecting nodes 1-2 and 1-5:\n\n\nCode\ng <- make_graph(edges = c(1,2, 1,5), n=10, directed = FALSE)\n\n\nWe can print the graph to get a summary of its nodes and edges:\n\n\nCode\ng\n\n\nIGRAPH 54fdf9f U--- 10 2 -- \n+ edges from 54fdf9f:\n[1] 1--2 1--5\n\n\nThis means: Undirected Named graph with 10 vertices and 2 edges, with the exact edges listed out. If the graph has a [name] attribute, it is printed as well.\n\n\n\n\n\n\nNote\n\n\n\nsummary does not list the edges, which is convenient for large graphs with millions of edges:\n\n\n\n\nCode\nsummary(g)\n\n\nIGRAPH 54fdf9f U--- 10 2 -- \n\n\nThe same function make_graph can create some notable graphs by just specifying their name. For example you can create the graph that represents the social network of Zachary’s karate club, that shows the friendship between 34 members of a karate club at a US university in the 1970s:\n\n\nCode\ng <- make_graph('Zachary')\n\n\nTo visualize a graph you can use plot:\n\n\nCode\nplot(g)"
  },
  {
    "objectID": "posts/Network data/index.html#vertex-and-edge-ids",
    "href": "posts/Network data/index.html#vertex-and-edge-ids",
    "title": "Practice with Network Data",
    "section": "Vertex and edge IDs",
    "text": "Vertex and edge IDs\nVertices and edges have numerical vertex IDs in igraph. Vertex IDs are always consecutive and they start with 1. For a graph with n vertices the vertex IDs are always between 1 and n. If some operation changes the number of vertices in the graphs, e.g. a subgraph is created via induced_subgraph, then the vertices are renumbered to satisfy this criterion.\nThe same is true for the edges as well: edge IDs are always between 1 and m, the total number of edges in the graph.\nIn addition to IDs, vertices and edges can be assigned a name and other attributes. That makes it easier to track them whenever the graph is altered."
  },
  {
    "objectID": "posts/Network data/index.html#addingdeleting-vertices-and-edges",
    "href": "posts/Network data/index.html#addingdeleting-vertices-and-edges",
    "title": "Practice with Network Data",
    "section": "Adding/deleting vertices and edges",
    "text": "Adding/deleting vertices and edges\nLet’s continue working with the Karate club graph. To add one or more vertices to an existing graph, use add_vertices:\n\n\nCode\ng <- add_vertices(g, 3)\n\n\nSimilarly, to add edges you can use add_edges:\n\n\nCode\ng <- add_edges(g, edges = c(1,35, 1,36, 34,37))\n\n\nEdges are added by specifying the source and target vertex IDs for each edge. This call added three edges, one connecting vertices 1 and 35, one connecting vertices 1 and 36, and one connecting vertices 34 and 37.\nIn addition to the add_vertices and add_edges functions, the plus operator can be used to add vertices or edges to graph. The actual operation that is performed depends on the type of the right hand side argument:\n\n\nCode\ng <- g + edges(c(1,35, 1,36, 34,37))\n\n\nYou can add a single vertex/edge at a time using add_vertex and add_edge.\nLet us add some more vertices and edges to our graph. In igraph we can use the magrittr package, which provides a mechanism for chaining commands with the operator %\\>%:\n\n\nCode\ng <- g %>% add_edges(edges=c(1,34)) %>% add_vertices(3) %>%\n     add_edges(edges=c(38,39, 39,40, 40,38, 40,37))\ng\n\n\nIGRAPH 5e0ad6c U--- 40 86 -- Zachary\n+ attr: name (g/c)\n+ edges from 5e0ad6c:\n [1]  1-- 2  1-- 3  1-- 4  1-- 5  1-- 6  1-- 7  1-- 8  1-- 9  1--11  1--12\n[11]  1--13  1--14  1--18  1--20  1--22  1--32  2-- 3  2-- 4  2-- 8  2--14\n[21]  2--18  2--20  2--22  2--31  3-- 4  3-- 8  3--28  3--29  3--33  3--10\n[31]  3-- 9  3--14  4-- 8  4--13  4--14  5-- 7  5--11  6-- 7  6--11  6--17\n[41]  7--17  9--31  9--33  9--34 10--34 14--34 15--33 15--34 16--33 16--34\n[51] 19--33 19--34 20--34 21--33 21--34 23--33 23--34 24--26 24--28 24--33\n[61] 24--34 24--30 25--26 25--28 25--32 26--32 27--30 27--34 28--34 29--32\n[71] 29--34 30--33 30--34 31--33 31--34 32--33 32--34 33--34  1--35  1--36\n+ ... omitted several edges\n\n\nCode\nplot(g)\n\n\n\n\n\nWe now have an undirected graph with 40 vertices and 86 edges. Vertex and edge IDs are always contiguous, so if you delete a vertex all subsequent vertices will be renumbered. When a vertex is renumbered, edges are not renumbered, but their source and target vertices will be. Use delete_vertices and delete_edges to perform these operations. For instance, to delete the edge connecting vertices 1-34, get its ID and then delete it:\n\n\nCode\nget.edge.ids(g, c(1,34))\n\n\n[1] 82\n\n\n\n\nCode\ng <- delete_edges(g, 82)\n\n\nAs an example, to create a broken ring:\n\n\nCode\ng <- make_ring(10) %>% delete_edges(\"10|1\")\nplot(g)\n\n\n\n\n\nThe example above shows that you can also refer to edges with strings containing the IDs of the source and target vertices, connected by a pipe symbol |. \"10|1\" in the above example means the edge that connects vertex 10 to vertex 1. Of course you can also use the edge IDs directly, or retrieve them with the get.edge.ids function:\n\n\nCode\ng <- make_ring(5)\ng <- delete_edges(g, get.edge.ids(g, c(1,5, 4,5)))\nplot(g)"
  },
  {
    "objectID": "posts/Network data/index.html#constructing-graphs",
    "href": "posts/Network data/index.html#constructing-graphs",
    "title": "Practice with Network Data",
    "section": "Constructing graphs",
    "text": "Constructing graphs\nIn addition to make_empty_graph, make_graph, and make_graph_from_literal, igraph includes many other function to construct a graph. Some are deterministic, i.e. they produce the same graph each single time, e.g. make_tree:\n\n\nCode\ngraph1 <- make_tree(127, 2, mode = \"undirected\")\nsummary(graph1)\n\n\nIGRAPH fbf1299 U--- 127 126 -- Tree\n+ attr: name (g/c), children (g/n), mode (g/c)\n\n\nCode\nplot(graph1)\n\n\n\n\n\nThis generates a regular tree graph with 127 vertices, each vertex having two children. No matter how many times you call make_tree, the generated graph will always be the same if you use the same parameters:\n\n\nCode\ngraph2 <- make_tree(127, 2, mode = \"undirected\")\n\n\n\n\nCode\nidentical_graphs(graph1,graph2)\n\n\n[1] TRUE\n\n\nOther functions generate graphs stochastically, i.e. they produce a different graph each time. For instance sample_grg:\n\n\nCode\ngraph1 <- sample_grg(100, 0.2)\nsummary(graph1)\n\n\nIGRAPH 4a02255 U--- 100 496 -- Geometric random graph\n+ attr: name (g/c), radius (g/n), torus (g/l)\n\n\nCode\nplot(graph1)\n\n\n\n\n\nThis generates a geometric random graph: n points are chosen randomly and uniformly inside the unit square and pairs of points closer to each other than a predefined distance d are connected by an edge. If you generate GRGs with the same parameters, they will be different:\n\n\nCode\ngraph2 <- sample_grg(100, 0.2)\nidentical_graphs(graph1, graph2)\n\n\n[1] FALSE\n\n\nCode\nplot(graph2)\n\n\n\n\n\nA slightly looser way to check if the graphs are equivalent is via isomorphic. Two graphs are said to be isomorphic if they have the same number of components (vertices and edges) and maintain a one-to-one correspondence between vertices and edges, i.e., they are connected in the same way.\n\n\nCode\nisomorphic(graph1, graph2)\n\n\n[1] FALSE\n\n\nChecking for isomorphism can take a while for large graphs (in this case, the answer can quickly be given by checking the degree sequence of the two graphs). identical_graph is a stricter criterion than isomorphic: the two graphs must have the same list of vertices and edges, in exactly the same order, with same directedness, and the two graphs must also have identical graph, vertex and edge attributes."
  },
  {
    "objectID": "posts/Network data/index.html#setting-and-retrieving-attributes",
    "href": "posts/Network data/index.html#setting-and-retrieving-attributes",
    "title": "Practice with Network Data",
    "section": "Setting and retrieving attributes",
    "text": "Setting and retrieving attributes\nIn addition to IDs, vertex and edges can have attributes such as a name, coordinates for plotting, metadata, and weights. The graph itself can have such attributes too (e.g. a name, which will show in summary). In a sense, every graph, vertex and edge can be used as an R namespace to store and retrieve these attributes.\nTo demonstrate the use of attributes, let us create a simple social network:\n\n\nCode\ng <- make_graph(~ Alice-Bob:Claire:Frank, Claire-Alice:Dennis:Frank:Esther,\n                George-Dennis:Frank, Dennis-Esther)\n\n\nEach vertex represents a person, so we want to store ages, genders and types of connection between two people (is_formal refers to whether a connection between one person or another is formal or informal, i.e. colleagues or friends). The \\$ operator is a shortcut to get and set graph attributes. It is shorter and just as readable as graph_attr and set_graph_attr.\n\n\nCode\nV(g)$age <- c(25, 31, 18, 23, 47, 22, 50) \nV(g)$gender <- c(\"f\", \"m\", \"f\", \"m\", \"m\", \"f\", \"m\")\nE(g)$is_formal <- c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE)\nsummary(g)\n\n\nIGRAPH e36a17b UN-- 7 9 -- \n+ attr: name (v/c), age (v/n), gender (v/c), is_formal (e/l)\n\n\nV and E are the standard way to obtain a sequence of all vertices and edges, respectively. This assigns an attribute to all vertices/edges at once. Another way to generate our social network is with the use of set_vertex_attr and set_edge_attr and the operator %\\>%:\n\n\nCode\ng <- make_graph(~ Alice-Bob:Claire:Frank, Claire-Alice:Dennis:Frank:Esther,\n                George-Dennis:Frank, Dennis-Esther) %>%\n  set_vertex_attr(\"age\", value = c(25, 31, 18, 23, 47, 22, 50)) %>%\n  set_vertex_attr(\"gender\", value = c(\"f\", \"m\", \"f\", \"m\", \"m\", \"f\", \"m\")) %>%\n  set_edge_attr(\"is_formal\", value = c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE))\nsummary(g)\n\n\nTo assign or modify an attribute for a single vertex/edge:\n\n\nCode\nE(g)$is_formal\n\n\n[1] FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\n\n\nCode\nE(g)$is_formal[1] <- TRUE\nE(g)$is_formal\n\n\n[1]  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE\n\n\nAttribute values can be set to any R object, but note that storing the graph in some file formats might result in the loss of complex attribute values. Vertices, edges and the graph itself can all be used to set attributes, e.g. to add a date to the graph:\n\n\nCode\ng$date <- c(\"2022-02-11\")\ngraph_attr(g, \"date\")\n\n\n[1] \"2022-02-11\"\n\n\nTo retrieve attributes, you can also use graph_attr, vertex_attr, and edge_attr. To find the ID of a vertex you can use the function match:\n\n\nCode\nmatch(c(\"George\"), V(g)$name)\n\n\n[1] 7\n\n\nTo assign attributes to a subset of vertices or edges, you can use:\n\n\nCode\nV(g)$name[1:3] <- c(\"Alejandra\", \"Bruno\", \"Carmina\")\nV(g)\n\n\n+ 7/7 vertices, named, from e36a17b:\n[1] Alejandra Bruno     Carmina   Frank     Dennis    Esther    George   \n\n\nTo delete attributes:\n\n\nCode\ng <- delete_vertex_attr(g, \"gender\")\nV(g)$gender\n\n\nNULL\n\n\nIf you want to save a graph in R with all the attributes use the R’s standard function dput function and retrieve it later with dget. You can also just save the R workspace and restore it later."
  },
  {
    "objectID": "posts/Network data/index.html#structural-properties-of-graphs",
    "href": "posts/Network data/index.html#structural-properties-of-graphs",
    "title": "Practice with Network Data",
    "section": "Structural properties of graphs",
    "text": "Structural properties of graphs\nigraph provides a large set of functions to calculate various structural properties of graphs. It is beyond the scope of this tutorial to document all of them, hence this section will only introduce a few of them for illustrative purposes. We will work on the small social network constructed in the previous section.\nPerhaps the simplest property one can think of is the degree. The degree of a vertex equals the number of edges adjacent to it. In case of directed networks, we can also define in-degree (the number of edges pointing towards the vertex) and out-degree (the number of edges originating from the vertex). igraph is able to calculate all of them using a simple syntax:\n\n\nCode\ndegree(g)\n\n\nAlejandra     Bruno   Carmina     Frank    Dennis    Esther    George \n        3         1         4         3         3         2         2 \n\n\nIf the graph was directed, we would have been able to calculate the in- and out-degrees separately using degree(mode=\"in\") and degree(mode=\"out\"). You can also pass a single vertex ID or a list of vertex IDs to degree if you want to calculate the degrees for only a subset of vertices:\n\n\nCode\ndegree(g, 7)\n\n\nGeorge \n     2 \n\n\n\n\nCode\ndegree(g, v=c(3,4,5))\n\n\nCarmina   Frank  Dennis \n      4       3       3 \n\n\nMost functions that accept vertex IDs also accept vertex names (i.e. the values of the name vertex attribute) as long as the names are unique:\n\n\nCode\ndegree(g, v=c(\"Carmina\", \"Frank\", \"Dennis\"))\n\n\nCarmina   Frank  Dennis \n      4       3       3 \n\n\nIt also works for single vertices:\n\n\nCode\ndegree(g, \"Bruno\")\n\n\nBruno \n    1 \n\n\nA similar syntax is used for most of the structural properties igraph can calculate. For vertex properties, the functions accept a vertex ID, a vertex name, or a list of vertex IDs or names (and if they are omitted, the default is the set of all vertices). For edge properties, the functions accept a single edge ID or a list of edge IDs.\n\nNOTE: For some measures, it does not make sense to calculate them only for a few vertices or edges instead of the whole graph, as it would take the same time anyway. In this case, the functions won’t accept vertex or edge IDs, but you can still restrict the resulting list later using standard operations. One such example is eigenvector centrality (evcent()).\n\nBesides degree, igraph includes built-in routines to calculate many other centrality properties, including vertex and edge betweenness (edge_betweenness) or Google’s PageRank (page_rank) just to name a few. Here we just illustrate edge betweenness:\n\n\nCode\nedge_betweenness(g)\n\n\n[1] 6 6 4 3 4 4 4 2 3\n\n\nNow we can also figure out which connections have the highest betweenness centrality:\n\n\nCode\nebs <- edge_betweenness(g)\nas_edgelist(g)[ebs == max(ebs), ]\n\n\n     [,1]        [,2]     \n[1,] \"Alejandra\" \"Bruno\"  \n[2,] \"Alejandra\" \"Carmina\""
  },
  {
    "objectID": "posts/Network data/index.html#querying-vertices-and-edges-based-on-attributes",
    "href": "posts/Network data/index.html#querying-vertices-and-edges-based-on-attributes",
    "title": "Practice with Network Data",
    "section": "Querying vertices and edges based on attributes",
    "text": "Querying vertices and edges based on attributes\n\nSelecting vertices\nImagine that in a given social network, you want to find out who has the largest degree. You can do that with the tools presented so far and the which.max function:\n\n\nCode\nwhich.max(degree(g))\n\n\nCarmina \n      3 \n\n\nAnother example would be to select only vertices that have only odd IDs but not even ones, using the V function:\n\n\nCode\ngraph <- graph.full(n=10)\nonly_odd_vertices <- which(V(graph)%%2==1)\nlength(only_odd_vertices)\n\n\n[1] 5\n\n\nOf course, it is possible to select vertices or edges by positional indices:\n\n\nCode\nseq <- V(graph)[2, 3, 7]\nseq\n\n\n+ 3/10 vertices, from 676efea:\n[1] 2 3 7\n\n\n\n\nCode\nseq <- seq[1, 3]    # filtering an existing vertex set\nseq\n\n\n+ 2/10 vertices, from 676efea:\n[1] 2 7\n\n\nSelecting a vertex that does not exist results in an error:\n\n\nCode\nseq <- V(graph)[2, 3, 7, \"foo\", 3.5]\n## Error in simple_vs_index(x, ii, na_ok) : Unknown vertex selected\n\n\nAttribute names can also be used as-is within the indexing brackets of V() and E(). This can be combined with R’s ability to use boolean vectors for indexing to obtain very concise and readable expressions to retrieve a subset of the vertex or edge set of a graph. For instance, the following command gives you the names of the individuals younger than 30 years in our social network:\n\n\nCode\nV(g)[age < 30]$name\n\n\n[1] \"Alejandra\" \"Carmina\"   \"Frank\"     \"Esther\"   \n\n\nOf course, < is not the only boolean operator that can be used for this. Other possibilities include the following:\n\n\n\n\n\n\n\nOperator\nMeaning\n\n\n\n\n==\nThe attribute/property value must be equal to\n\n\n!=\nThe attribute/property value must not be equal to\n\n\n<\nThe attribute/property value must be less than\n\n\n<=\nThe attribute/property value must be less than or equal to\n\n\n>\nThe attribute/property value must be greater than\n\n\n>=\nThe attribute/property value must be greater than or equal to\n\n\n%in%\nThe attribute/property value must be included in\n\n\n\nYou can also create a “not in” operator from %in% using the Negate function:\n\n\nCode\n`%notin%` <- Negate(`%in%`)\n\n\nIf an attribute has the same name as an igraph function, you should be careful as the syntax can become a little confusing. For instance, if there is an attribute named degree that represents the grades of an exam for each person, that should not be confused with the igraph function that computes the degrees of vertices in a network sense:\n\n\nCode\nV(g)$degree <- c(\"A\", \"B\", \"B+\", \"A+\", \"C\", \"A\", \"B\")\nV(g)$degree[degree(g) == 3]\n\n\n[1] \"A\"  \"A+\" \"C\" \n\n\n\n\nCode\nV(g)$name[degree(g) == 3]\n\n\n[1] \"Alejandra\" \"Frank\"     \"Dennis\"   \n\n\n\n\nSelecting edges\nEdges can be selected based on attributes just like vertices. As mentioned above, the standard way to get edges is E. Moreover, there are a few special structural properties for selecting edges.\nUsing .from allows you to filter the edge sequence based on the source vertices of the edges. E.g., to select all the edges originating from Carmina (who has vertex index 3):\n\n\nCode\nE(g)[.from(3)]\n\n\n+ 4/9 edges from e36a17b (vertex names):\n[1] Alejandra--Carmina Carmina  --Frank   Carmina  --Dennis  Carmina  --Esther \n\n\nOf course it also works with vertex names:\n\n\nCode\nE(g)[.from(\"Carmina\")]\n\n\n+ 4/9 edges from e36a17b (vertex names):\n[1] Alejandra--Carmina Carmina  --Frank   Carmina  --Dennis  Carmina  --Esther \n\n\nUsing .to filters edge sequences based on the target vertices. This is different from .from if the graph is directed, while it gives the same answer for undirected graphs. Using .inc selects only those edges that are incident on a single vertex or at least one of the vertices, irrespectively of the edge directions.\nThe %--% operator can be used to select edges between specific groups of vertices, ignoring edge directions in directed graphs. For instance, the following expression selects all the edges between Carmina (vertex index 3), Dennis (vertex index 5) and Esther (vertex index 6):\n\n\nCode\nE(g) [ 3:5 %--% 5:6 ]\n\n\n+ 3/9 edges from e36a17b (vertex names):\n[1] Carmina--Dennis Carmina--Esther Dennis --Esther\n\n\nTo make the %--% operator work with names, you can build string vectors containing the names and then use these vectors as operands. For instance, to select all the edges that connect men to women, we can do the following after re-adding the gender attribute that we deleted earlier:\n\n\nCode\nV(g)$gender <- c(\"f\", \"m\", \"f\", \"m\", \"m\", \"f\", \"m\")\n\n\n\n\nCode\nmen <- V(g)[gender == \"m\"]$name\nmen\n\n\n[1] \"Bruno\"  \"Frank\"  \"Dennis\" \"George\"\n\n\n\n\nCode\nwomen <- V(g)[gender == \"f\"]$name\nwomen\n\n\n[1] \"Alejandra\" \"Carmina\"   \"Esther\"   \n\n\n\n\nCode\nE(g)[men %--% women]\n\n\n+ 5/9 edges from e36a17b (vertex names):\n[1] Alejandra--Bruno  Alejandra--Frank  Carmina  --Frank  Carmina  --Dennis\n[5] Dennis   --Esther"
  },
  {
    "objectID": "posts/Network data/index.html#treating-a-graph-as-an-adjacency-matrix",
    "href": "posts/Network data/index.html#treating-a-graph-as-an-adjacency-matrix",
    "title": "Practice with Network Data",
    "section": "Treating a graph as an adjacency matrix",
    "text": "Treating a graph as an adjacency matrix\nThe adjacency matrix is another way to represent a graph. In an adjacency matrix, rows and columns are labeled by graph vertices, and the elements of the matrix indicate the number of edges between vertices i and j. The adjacency matrix for the example graph is:\n\n\nCode\nget.adjacency(g)\n\n\n7 x 7 sparse Matrix of class \"dgCMatrix\"\n          Alejandra Bruno Carmina Frank Dennis Esther George\nAlejandra         .     1       1     1      .      .      .\nBruno             1     .       .     .      .      .      .\nCarmina           1     .       .     1      1      1      .\nFrank             1     .       1     .      .      .      1\nDennis            .     .       1     .      .      1      1\nEsther            .     .       1     .      1      .      .\nGeorge            .     .       .     1      1      .      .\n\n\nFor example, Carmina (1, 0, 0, 1, 1, 1, 0) is directly connected to Alejandra (who has vertex index 1), Frank (index 4), Dennis (index 5) and Esther (index 6), but not to Bruno (index 2) or to George (index 7)."
  },
  {
    "objectID": "posts/Network data/index.html#layouts-and-plotting",
    "href": "posts/Network data/index.html#layouts-and-plotting",
    "title": "Practice with Network Data",
    "section": "Layouts and plotting",
    "text": "Layouts and plotting\nA graph is an abstract mathematical object without a specific representation in 2D, 3D or any other geometric space. This means that whenever we want to visualise a graph, we have to find a mapping from vertices to coordinates in two- or three-dimensional space first, preferably in a way that is useful and/or pleasing for the eye. A separate branch of graph theory, namely graph drawing, tries to solve this problem via several graph layout algorithms. igraph implements quite a few layout algorithms and is also able to draw them onto the screen or to any output format that R itself supports.\n\nLayout algorithms\nThe layout functions in igraph always start with layout. The following table summarises them:\n\n\n\n\n\n\n\nMethod name\nAlgorithm description\n\n\n\n\nlayout_randomly\nPlaces the vertices completely randomly\n\n\nlayout_in_circle\nDeterministic layout that places the vertices on a circle\n\n\nlayout_on_sphere\nDeterministic layout that places the vertices evenly on the surface of a sphere\n\n\nlayout_with_drl\nThe Drl (Distributed Recursive Layout) algorithm for large graphs\n\n\nlayout_with_fr\nFruchterman-Reingold force-directed algorithm\n\n\nlayout_with_kk\nKamada-Kawai force-directed algorithm\n\n\nlayout_with_lgl\nThe LGL (Large Graph Layout) algorithm for large graphs\n\n\nlayout_as_tree\nReingold-Tilford tree layout, useful for (almost) tree-like graphs\n\n\nlayout_nicely\nLayout algorithm that automatically picks one of the other algorithms based on certain properties of the graph\n\n\n\nLayout algorithms can be called directly with a graph as its first argument. They will return a matrix with two columns and as many rows as the number of vertices in the graph; each row will correspond to the position of a single vertex, ordered by vertex IDs. Some algorithms have a 3D variant; in this case they return three columns instead of 2.\n\n\nCode\nlayout <- layout_with_kk(g)\n\n\nSome layout algorithms take additional arguments; e.g., when laying out a graph as a tree, it might make sense to specify which vertex is to be placed at the root of the layout:\n\n\nCode\nlayout <- layout_as_tree(g, root = 2)\n\n\n\n\nDrawing a graph using a layout\nWe can plot our imaginary social network with the Kamada-Kawai layout algorithm as follows:\n\n\nCode\nlayout <- layout_with_kk(g)\n\n\n\n\nCode\nplot(g, layout = layout, main = \"Social network with the Kamada-Kawai layout algorithm\")\n\n\n\n\n\nThis should open a new window showing a visual representation of the network. Remember that the exact placement of nodes may be different on your machine since the layout is not deterministic.\nThe layout argument also accepts functions; in this case, the function will be called with the graph as its first argument. This makes it possible to just pass the name of a layout function directly, without creating a layout variable:\n\n\nCode\nplot(g, layout = layout_with_fr,\n     main = \"Social network with the Fruchterman-Reingold layout algorithm\")\n\n\n\n\n\nTo improve the visuals, a trivial addition would be to color the vertices according to the gender. We should also try to place the labels slightly outside the vertices to improve readability:\n\n\nCode\nV(g)$color <- ifelse(V(g)$gender == \"m\", \"yellow\", \"red\")\nplot(g, layout = layout, vertex.label.dist = 3.5,\n     main = \"Social network - with genders as colors\")\n\n\n\n\n\nYou can also treat the gender attribute as a factor and provide the colors with an argument to plot(), which takes precedence over the color vertex attribute. Colors will be assigned automatically to levels of a factor:\n\n\nCode\nplot(g, layout=layout, vertex.label.dist=3.5, vertex.color=as.factor(V(g)$gender))\n\n\n\n\n\nAs seen above with the vertex.color argument, you can specify visual properties as arguments to plot instead of using vertex or edge attributes. The following plot shows the formal ties with thick lines while informal ones with thin lines:\n\n\nCode\nplot(g, layout=layout, vertex.label.dist=3.5, vertex.size=20,\n     vertex.color=ifelse(V(g)$gender == \"m\", \"yellow\", \"red\"),\n     edge.width=ifelse(E(g)$is_formal, 5, 1))\n\n\n\n\n\nThis latter approach is preferred if you want to keep the properties of the visual representation of your graph separate from the graph itself.\nIn summary, there are special vertex and edge properties that correspond to the visual representation of the graph. These attributes override the default settings of igraph (i.e color, weight, name, shape,layout,etc.). The following two tables summarise the most frequently used visual attributes for vertices and edges, respectively:\n\n\nVertex attributes controlling graph plots\n\n\n\n\n\n\n\n\nAttribute name\nKeyword argument\nPurpose\n\n\n\n\ncolor\nvertex.color\nColor of the vertex\n\n\nlabel\nvertex.label\nLabel of the vertex. They will be converted to character. Specify NA to omit vertex labels. The default vertex labels are the vertex ids.\n\n\nlabel.cex\nvertex.label.cex\nFont size of the vertex label, interpreted as a multiplicative factor, similarly to R’s text function\n\n\nlabel.color\nvertex.label.color\nColor of the vertex label\n\n\nlabel.degree\nvertex.label.degree\nIt defines the position of the vertex labels, relative to the center of the vertices. It is interpreted as an angle in radian, zero means ‘to the right’, and ‘pi’ means to the left, up is -pi/2 and down is pi/2. The default value is -pi/4\n\n\nlabel.dist\nvertex.label.dist\nDistance of the vertex label from the vertex itself, relative to the vertex size\n\n\nlabel.family\nvertex.label.family\nFont family of the vertex, similarly to R’s text function\n\n\nlabel.font\nvertex.label.font\nFont within the font family of the vertex, similarly to R’s text function\n\n\nshape\nvertex.shape\nThe shape of the vertex, currently “circle”, “square”, “csquare”, “rectangle”, “crectangle”, “vrectangle”, “pie” (see vertex.shape.pie), ‘sphere’, and “none” are supported, and only by the plot.igraph command.\n\n\nsize\nvertex.size\nThe size of the vertex, a numeric scalar or vector, in the latter case each vertex sizes may differ\n\n\n\n\n\nEdge attributes controlling graph plots\n\n\n\n\n\n\n\n\nAttribute name\nKeyword argument\nPurpose\n\n\n\n\ncolor\nedge.color\nColor of the edge\n\n\ncurved\nedge.curved\nA numeric value specifies the curvature of the edge; zero curvature means straight edges, negative values means the edge bends clockwise, positive values the opposite. TRUE means curvature 0.5, FALSE means curvature zero\n\n\narrow.size\nedge.arrow.size\nCurrently this is a constant, so it is the same for every edge. If a vector is submitted then only the first element is used, ie. if this is taken from an edge attribute then only the attribute of the first edge is used for all arrows.\n\n\narrow.width\nedge.arrow.width\nThe width of the arrows. Currently this is a constant, so it is the same for every edge\n\n\nwidth\nedge.width\nWidth of the edge in pixels\n\n\nlabel\nedge.label\nIf specified, it adds a label to the edge.\n\n\nlabel.cex\nedge.label.cex\nFont size of the edge label, interpreted as a multiplicative factor, similarly to R’s text function\n\n\nlabel.color\nedge.label.color\nColor of the edge label\n\n\nlabel.family\nedge.label.family\nFont family of the edge, similarly to R’s text function\n\n\nlabel.font\nedge.label.font\nFont within the font family of the edge, similarly to R’s text function\n\n\n\n\n\nGeneric arguments of plot()\nThese settings can be specified as arguments to the plot function to control the overall appearance of the plot.\n\n\n\n\n\n\n\nKeyword argument\nPurpose\n\n\n\n\nlayout\nThe layout to be used. It can be an instance of Layout, a list of tuples containing X-Y coordinates, or the name of a layout algorithm. The default is auto, which selects a layout algorithm automatically based on the size and connectedness of the graph.\n\n\nmargin\nThe amount of empty space below, over, at the left and right of the plot, it is a numeric vector of length four."
  },
  {
    "objectID": "posts/Network data/index.html#assignment",
    "href": "posts/Network data/index.html#assignment",
    "title": "Practice with Network Data",
    "section": "ASSIGNMENT",
    "text": "ASSIGNMENT\nImprove the network above by:\n\nColoring the edges according to Advisor / BCB520 attribute.\nColoring the nodes according to Department.\nAdujsting the labels to improve readability."
  },
  {
    "objectID": "posts/BCB 520 MidtermPortfolio /index.html",
    "href": "posts/BCB 520 MidtermPortfolio /index.html",
    "title": "BCB 520- Midterm Portfolio Post",
    "section": "",
    "text": "This is a post that will be my Midterm assignment, testing my knowledge and skills acquired in/on Data visualization thus far."
  },
  {
    "objectID": "posts/BCB 520 MidtermPortfolio /index.html#preamble",
    "href": "posts/BCB 520 MidtermPortfolio /index.html#preamble",
    "title": "BCB 520- Midterm Portfolio Post",
    "section": "PREAMBLE",
    "text": "PREAMBLE\nIn today’s world, air travel has become an essential mode of transportation for millions of people worldwide. While air travel is generally considered safe, accidents do occur from time to time, which can result in loss of life and damage to property. In this context, understanding the relationship between the number of departures and the incidence of fatal accidents may provide valuable insights into the safety of air travel.\nIn this post, data collected on some airlines for about 30 years (1985-1999 and 2000-2014 periods) will be analyzed to assess aviation safety.\nCriteria for choice of parameters used in assessment: The data set had several airlines so airlines with more than one fatal accident within the period were selected for analysis."
  },
  {
    "objectID": "posts/BCB 520 MidtermPortfolio /index.html#data",
    "href": "posts/BCB 520 MidtermPortfolio /index.html#data",
    "title": "BCB 520- Midterm Portfolio Post",
    "section": "DATA",
    "text": "DATA\nThe data set (Table 1) I will be using for my analyses and visualizations is already existent in R studio as package. Source: Aviation Safety Network.\n\n\nCode\nairlinesafety=read.csv('Airline safety datset.csv', header = TRUE)\n\nlibrary(knitr)\ninvisible(library(kableExtra))\n\nkable(airlinesafety, caption = \"Table 1: Airline Safety Data\") %>%\n  kable_styling()\n\n\n\n\nTable 1: Airline Safety Data\n \n  \n    airline \n    avail_seat_km_per_week \n    incidents_85_99 \n    fatal_accidents_85_99 \n    fatalities_85_99 \n    incidents_00_14 \n    fatal_accidents_00_14 \n    fatalities_00_14 \n  \n \n\n  \n    Aer Lingus \n    320906734 \n    2 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    Aeroflot* \n    1197672318 \n    76 \n    14 \n    128 \n    6 \n    1 \n    88 \n  \n  \n    Aerolineas Argentinas \n    385803648 \n    6 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n  \n    Aeromexico* \n    596871813 \n    3 \n    1 \n    64 \n    5 \n    0 \n    0 \n  \n  \n    Air Canada \n    1865253802 \n    2 \n    0 \n    0 \n    2 \n    0 \n    0 \n  \n  \n    Air France \n    3004002661 \n    14 \n    4 \n    79 \n    6 \n    2 \n    337 \n  \n  \n    Air India* \n    869253552 \n    2 \n    1 \n    329 \n    4 \n    1 \n    158 \n  \n  \n    Air New Zealand* \n    710174817 \n    3 \n    0 \n    0 \n    5 \n    1 \n    7 \n  \n  \n    Alaska Airlines* \n    965346773 \n    5 \n    0 \n    0 \n    5 \n    1 \n    88 \n  \n  \n    Alitalia \n    698012498 \n    7 \n    2 \n    50 \n    4 \n    0 \n    0 \n  \n  \n    All Nippon Airways \n    1841234177 \n    3 \n    1 \n    1 \n    7 \n    0 \n    0 \n  \n  \n    American* \n    5228357340 \n    21 \n    5 \n    101 \n    17 \n    3 \n    416 \n  \n  \n    Austrian Airlines \n    358239823 \n    1 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n  \n    Avianca \n    396922563 \n    5 \n    3 \n    323 \n    0 \n    0 \n    0 \n  \n  \n    British Airways* \n    3179760952 \n    4 \n    0 \n    0 \n    6 \n    0 \n    0 \n  \n  \n    Cathay Pacific* \n    2582459303 \n    0 \n    0 \n    0 \n    2 \n    0 \n    0 \n  \n  \n    China Airlines \n    813216487 \n    12 \n    6 \n    535 \n    2 \n    1 \n    225 \n  \n  \n    Condor \n    417982610 \n    2 \n    1 \n    16 \n    0 \n    0 \n    0 \n  \n  \n    COPA \n    550491507 \n    3 \n    1 \n    47 \n    0 \n    0 \n    0 \n  \n  \n    Delta / Northwest* \n    6525658894 \n    24 \n    12 \n    407 \n    24 \n    2 \n    51 \n  \n  \n    Egyptair \n    557699891 \n    8 \n    3 \n    282 \n    4 \n    1 \n    14 \n  \n  \n    El Al \n    335448023 \n    1 \n    1 \n    4 \n    1 \n    0 \n    0 \n  \n  \n    Ethiopian Airlines \n    488560643 \n    25 \n    5 \n    167 \n    5 \n    2 \n    92 \n  \n  \n    Finnair \n    506464950 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    Garuda Indonesia \n    613356665 \n    10 \n    3 \n    260 \n    4 \n    2 \n    22 \n  \n  \n    Gulf Air \n    301379762 \n    1 \n    0 \n    0 \n    3 \n    1 \n    143 \n  \n  \n    Hawaiian Airlines \n    493877795 \n    0 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n  \n    Iberia \n    1173203126 \n    4 \n    1 \n    148 \n    5 \n    0 \n    0 \n  \n  \n    Japan Airlines \n    1574217531 \n    3 \n    1 \n    520 \n    0 \n    0 \n    0 \n  \n  \n    Kenya Airways \n    277414794 \n    2 \n    0 \n    0 \n    2 \n    2 \n    283 \n  \n  \n    KLM* \n    1874561773 \n    7 \n    1 \n    3 \n    1 \n    0 \n    0 \n  \n  \n    Korean Air \n    1734522605 \n    12 \n    5 \n    425 \n    1 \n    0 \n    0 \n  \n  \n    LAN Airlines \n    1001965891 \n    3 \n    2 \n    21 \n    0 \n    0 \n    0 \n  \n  \n    Lufthansa* \n    3426529504 \n    6 \n    1 \n    2 \n    3 \n    0 \n    0 \n  \n  \n    Malaysia Airlines \n    1039171244 \n    3 \n    1 \n    34 \n    3 \n    2 \n    537 \n  \n  \n    Pakistan International \n    348563137 \n    8 \n    3 \n    234 \n    10 \n    2 \n    46 \n  \n  \n    Philippine Airlines \n    413007158 \n    7 \n    4 \n    74 \n    2 \n    1 \n    1 \n  \n  \n    Qantas* \n    1917428984 \n    1 \n    0 \n    0 \n    5 \n    0 \n    0 \n  \n  \n    Royal Air Maroc \n    295705339 \n    5 \n    3 \n    51 \n    3 \n    0 \n    0 \n  \n  \n    SAS* \n    682971852 \n    5 \n    0 \n    0 \n    6 \n    1 \n    110 \n  \n  \n    Saudi Arabian \n    859673901 \n    7 \n    2 \n    313 \n    11 \n    0 \n    0 \n  \n  \n    Singapore Airlines \n    2376857805 \n    2 \n    2 \n    6 \n    2 \n    1 \n    83 \n  \n  \n    South African \n    651502442 \n    2 \n    1 \n    159 \n    1 \n    0 \n    0 \n  \n  \n    Southwest Airlines \n    3276525770 \n    1 \n    0 \n    0 \n    8 \n    0 \n    0 \n  \n  \n    Sri Lankan / AirLanka \n    325582976 \n    2 \n    1 \n    14 \n    4 \n    0 \n    0 \n  \n  \n    SWISS* \n    792601299 \n    2 \n    1 \n    229 \n    3 \n    0 \n    0 \n  \n  \n    TACA \n    259373346 \n    3 \n    1 \n    3 \n    1 \n    1 \n    3 \n  \n  \n    TAM \n    1509195646 \n    8 \n    3 \n    98 \n    7 \n    2 \n    188 \n  \n  \n    TAP - Air Portugal \n    619130754 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    Thai Airways \n    1702802250 \n    8 \n    4 \n    308 \n    2 \n    1 \n    1 \n  \n  \n    Turkish Airlines \n    1946098294 \n    8 \n    3 \n    64 \n    8 \n    2 \n    84 \n  \n  \n    United / Continental* \n    7139291291 \n    19 \n    8 \n    319 \n    14 \n    2 \n    109 \n  \n  \n    US Airways / America West* \n    2455687887 \n    16 \n    7 \n    224 \n    11 \n    2 \n    23 \n  \n  \n    Vietnam Airlines \n    625084918 \n    7 \n    3 \n    171 \n    1 \n    0 \n    0 \n  \n  \n    Virgin Atlantic \n    1005248585 \n    1 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    Xiamen Airlines \n    430462962 \n    9 \n    1 \n    82 \n    2 \n    0 \n    0 \n  \n\n\n\n\n\nA data dictionary has been added to provide definitions for the various headers in the data set. Table 2 below is the data dictionary that defines attributes in the data:\n\n\nCode\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(readxl)\ninvisible(library(dplyr))\ninvisible(library(kableExtra))\n\nsuppressMessages({\n  airlinesafety_attributes <- read_xlsx(\"airlinesafetydatadictionary.xlsx\")\n  knitr::kable(airlinesafety_attributes, caption = \"Table 2: Airline Safety Data Dictionary\") %>%\n    kable_styling()\n})\n\n\n\n\nTable 2: Airline Safety Data Dictionary\n \n  \n    Header \n    Definition \n  \n \n\n  \n    airline \n    Airline \n  \n  \n    avail_seat_km_per_week \n    Available seat kilometers flown every week \n  \n  \n    incidents_85_99 \n    Total number of incidents, 1985–1999 \n  \n  \n    fatal_accidents_85_99 \n    Total number of fatal accidents, 1985–1999 \n  \n  \n    fatalities_85_99 \n    Total number of fatalities, 1985–1999 \n  \n  \n    incidents_00_14 \n    Total number of incidents, 2000–2014 \n  \n  \n    fatal_accidents_00_14 \n    Total number of fatal accidents, 2000–2014 \n  \n  \n    fatalities_00_14 \n    Total number of fatalities, 2000–2014"
  },
  {
    "objectID": "posts/BCB 520 MidtermPortfolio /index.html#visualizations",
    "href": "posts/BCB 520 MidtermPortfolio /index.html#visualizations",
    "title": "BCB 520- Midterm Portfolio Post",
    "section": "VISUALIZATIONS",
    "text": "VISUALIZATIONS\n\n\nCode\nlibrary(knitr)\n\nSumFatal_accidents <- apply(\n  airlinesafety[c(\"fatal_accidents_85_99\", \"fatal_accidents_00_14\")], \n  MARGIN = 2, \n  FUN = function(x) {\n    c(\n      Average = round(mean(x), digits = 2), \n      SD = round(sd(x), digits = 2), \n      quantile(x, probs = c(.25, .5, .75, 1)),\n      round(100*mean(x > 1), digits = 2)\n    )\n  }\n)\n\nrownames(SumFatal_accidents) <- c(\n  \"Average\", \"Standard deviation\", \"Q1 (<25%)\", \n  \"Median\", \"Q3 (<75%)\", \"Max\", \n  \"Percentage of airlines with more than one fatal accident\"\n)\n\nkable(\n  round(SumFatal_accidents, digits = 2), \n  align = \"c\", \n  caption = \"Table 3: Summary of fatal accidents\"\n) %>%\n  kable_styling()\n\n\n\n\nTable 3: Summary of fatal accidents\n \n  \n      \n    fatal_accidents_85_99 \n    fatal_accidents_00_14 \n  \n \n\n  \n    Average \n    2.18 \n    0.66 \n  \n  \n    Standard deviation \n    2.86 \n    0.86 \n  \n  \n    Q1 (<25%) \n    0.00 \n    0.00 \n  \n  \n    Median \n    1.00 \n    0.00 \n  \n  \n    Q3 (<75%) \n    3.00 \n    1.00 \n  \n  \n    Max \n    14.00 \n    3.00 \n  \n  \n    Percentage of airlines with more than one fatal accident \n    41.07 \n    21.43 \n  \n\n\n\n\n\nTable 3 shows a comparison in the number of fatal accidents that have occurred between the two time periods and suggests a decline in recent times (2000-2014) compared to earlier (1985-1999). The pattern is shown for individual airlines in Figure 1.\n\n\nCode\nsuppressPackageStartupMessages(library(reshape2))\n\nairlinesafety <- read.csv(\"Airline safety datset.csv\")\n\nairlines_fatal <- airlinesafety %>%\n  filter(fatal_accidents_85_99 + fatal_accidents_00_14 > 1)\n\nfatal_data <- data.frame(Airline = airlines_fatal$airline,\n                         Fatal_85_99 = airlines_fatal$fatal_accidents_85_99,\n                         Fatal_00_14 = airlines_fatal$fatal_accidents_00_14)\n\nfatal_data_melt <- melt(fatal_data, id.vars = \"Airline\")\n\nsuppressMessages({\n  fatal_data_summary <- fatal_data_melt %>%\n    group_by(Airline, variable) %>%\n    summarize(total = sum(value))\n  \n  fatal_data_summary <- fatal_data_summary %>%\n    group_by(Airline) %>%\n    summarize(total = sum(total)) %>%\n    arrange(desc(total)) %>%\n    pull(Airline)\n})\n\nfatal_data_melt$Airline <- factor(fatal_data_melt$Airline, levels = fatal_data_summary)\n\nggplot(fatal_data_melt, aes(x = Airline, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(title = \"Airlines with more than one fatal accident\",\n       x = \"Airline\",\n       y = \"Number of fatal accidents\",\n       caption = \"Figure 1: Number of fatal accidents by airline\", caption.position = \"left\") +\n  scale_fill_manual(name = \"Time Period\",\n                    values = c(\"grey\", \"black\"),\n                    labels = c(\"1985-1999\", \"2000-2014\")) +\n  theme(axis.text.x = element_text(angle = 70, hjust = 1),\n        plot.caption = element_text(hjust = 0))\n\n\n\n\n\nThe dataset provides information on available seat kilometers flown each week. Based on this I explore a comparable quantity that is weekly departures. In this context, understanding the relationship between the number of departures and the incidence of fatal accidents may provide insights into the safety of air travel.\n\n\nCode\nlibrary(ggplot2)\n\ndepartures <- airlinesafety %>%\n  group_by(airline) %>%\n  summarise(total_weekly_departures = sum(incidents_00_14)) %>%\n  rename(airline = \"airline\")  # rename airline_name column to airline\n\nfatal_data <- airlinesafety %>%\n  filter(fatal_accidents_85_99 + fatal_accidents_00_14 > 1) %>%\n  mutate(total_fatalities = fatal_accidents_85_99 + fatal_accidents_00_14) %>%\n  select(airline, total_fatalities) %>%\n  inner_join(departures, by = \"airline\")\n\nprint(\n  ggplot(fatal_data, aes(x = total_weekly_departures, y = total_fatalities)) +\n  geom_point() +\n  labs(title = \"Fatal accidents vs. weekly departures\",\n       x = \"Total weekly departures\",\n       y = \"Total fatal accidents\",\n       caption = \"Figure 2: Scatter plot of fatal accidents vs. weekly departures\") +\n  theme(plot.caption = element_text(hjust = 0, margin = margin(t = 10)))\n)\n\n\n\n\n\n\n\nCode\ncorrelation <- cor(fatal_data$total_weekly_departures, fatal_data$total_fatalities)\nround_correlation <- signif(correlation, digits = 2)\nprint(paste(\"The correlation coefficient is:\", round_correlation))\n\n\n[1] \"The correlation coefficient is: 0.65\"\n\n\nThe scatter plot shows a general trend of increasing fatal accidents as the number of weekly departures increases, and the correlation coefficient of 0.65 indicates a moderately strong positive relationship between the two variables. This suggests that airlines with a higher number of weekly departures are more likely to experience fatal accidents, although other factors could also play a role.\nHowever, correlation does not imply causation, and there could be other factors that contribute to the observed relationship. Further analysis would be needed to fully understand the factors that influence fatal accidents in the airline industry."
  },
  {
    "objectID": "posts/BCB 520 MidtermPortfolio /index.html#conclusions",
    "href": "posts/BCB 520 MidtermPortfolio /index.html#conclusions",
    "title": "BCB 520- Midterm Portfolio Post",
    "section": "CONCLUSIONS",
    "text": "CONCLUSIONS\nThe descriptive data don’t precisely tell which airline is the safest for travel. However, the visualizations show that the number of deadly accidents has significantly decreased and has continued to do so. However, the visualizations are observations based on temporal patterns and would require further analysis and inclusion of additional data to make profound conclusions.\nAdditionally, airlines with a higher number of weekly departures may face more challenges in maintaining the safety of their operations. This could be due to factors such as increased pressure to meet schedules and maintain profitability, as well as the need to manage a larger and more complex fleet of aircraft.\nAlso, airlines with higher numbers of weekly departures may benefit from investing in additional safety measures and procedures to mitigate the risks associated with their operations. This could include initiatives such as more extensive pilot training programs, regular safety audits, and increased use of technology to monitor and improve operational safety.\nOverall, these highlight the importance of maintaining high safety standards in the aviation industry, especially for airlines with larger operations. By prioritizing safety and investing in appropriate measures, airlines cannot only reduce the risk of accidents and fatalities, but also enhance their reputation and build trust with their passengers."
  },
  {
    "objectID": "posts/Assignment 7/index.html",
    "href": "posts/Assignment 7/index.html",
    "title": "Practice with Spatial Data",
    "section": "",
    "text": "In this assignment, we’ll consider some of the tools and techniques for visualizing spatial data. Spatial data comes in two broad categories, geographic and spatial fields. Let’s practice a few visualizations to get a feel for how these things work!"
  },
  {
    "objectID": "posts/Assignment 7/index.html#geographic-maps",
    "href": "posts/Assignment 7/index.html#geographic-maps",
    "title": "Practice with Spatial Data",
    "section": "GEOGRAPHIC MAPS!",
    "text": "GEOGRAPHIC MAPS!\nIn class I bet Ronald that he would end up creating some kind of map based visualization before he graduated with his PHD. This is because he works on Malaria - a terrible disease with a strong spatial component to its risk levels. Let’s get some Malaria data and map it!\nThe data I obtained were from the Malaria Atlas. I downloaded a csv for 10 years of data for all the countries the had on file.\n\n\nCode\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(dplyr)\n\nMalaria <- read.csv(\"National_Unit_data.csv\")\n\nIncidence <- Malaria %>%\n  filter(Metric == \"Mortality Rate\" & Year %in% c(\"2019\", \"2020\", \"2021\")) %>%\n  mutate(Prevalence = Value) %>%\n  select(c(ISO3, Year, Prevalence))\n\n\nNow I’m going to use the rnaturalearth package to create contry polygons. Then I’ll add the Malaria data to that data frame.\n\n\nCode\nworld_map <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\nmap_data <- world_map %>%\n  left_join(Incidence, by = c(\"iso_a3\" = \"ISO3\"))\n\n\nNow I will make a plot!\n\n\nCode\nggplot() +\n  geom_sf(data = map_data, aes(fill = Prevalence)) +\n  scale_fill_gradient(low = \"white\", high = \"red\", na.value = \"gray\", name = \"Malaria Prevalence\") +\n  theme_minimal() +\n  theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = element_blank()) +\n  labs(title = \"Malaria Prevalence by Country\") +\n  facet_wrap(~ Year)\n\n\n\n\n\nOh SNAP! We made a MAP!\nHey! That rhymes!\nWhat is missing? Units? Is that actually prevalence? We sure left a lot of data on the table? Can we add some kind of time thing? Change the variable?"
  },
  {
    "objectID": "posts/Assignment 7/index.html#spatial-fields",
    "href": "posts/Assignment 7/index.html#spatial-fields",
    "title": "Practice with Spatial Data",
    "section": "SPATIAL FIELDS",
    "text": "SPATIAL FIELDS\nSpatial field data refers to data that has a continuous spatial distribution and can be measured at any location within the defined area. Here are some interesting examples of spatial field data:\n\nAir temperature: Air temperature data collected from weather stations or remote sensing technologies can be used to create temperature maps or to study climate change, urban heat islands, and other environmental phenomena. TROPICAL CYCLONE!\nPrecipitation: Rainfall, snowfall, or other forms of precipitation data collected from weather stations or satellites can be used to study the hydrological cycle, flood risk, droughts, or water resource management.\nSoil moisture: Soil moisture data collected from in situ sensors or remote sensing technologies can be used to study agricultural productivity, irrigation management, droughts, and land degradation. Elevation data (Digital Elevation Models, DEMs):\nElevation data collected from satellite-based radar, LiDAR, or photogrammetry can be used to study topography, watershed delineation, flood risk, landslides, or geomorphology.\nVegetation indices: Indices like the Normalized Difference Vegetation Index (NDVI) or Enhanced Vegetation Index (EVI) derived from satellite imagery can be used to study vegetation health, land cover change, deforestation, agricultural productivity, and carbon sequestration.\nAir quality: Data on air pollutants like PM2.5, PM10, NO2, SO2, O3, and CO collected from ground-based monitors or satellites can be used to study the impact of pollution on human health, urban planning, or environmental policy.\nOceanographic data: Sea surface temperature, salinity, and chlorophyll-a concentration data collected from buoys, ships, or satellites can be used to study ocean currents, climate change, or marine ecosystems. OCEAN CURRENTS!\nPopulation density: Spatially explicit population density data can be used to study urbanization, migration patterns, infrastructure planning, or public health.\nLand use and land cover: Land use and land cover data collected from satellite imagery can be used to study urban growth, deforestation, habitat fragmentation, or landscape ecology.\nSeismic activity: Spatial distribution of earthquakes and their magnitudes can be used to study tectonics, fault zones, seismic hazards, or infrastructure resilience. DARK NIGHTS IN ANTAKYA\nSPORTS! Let’s check out a baseball example!\n\n\n\nCode\n# install.packages(\"baseballr\")\nlibrary(remotes)\n\n\n# install_github(\"bayesball/CalledStrike\")\n\n\n\n\nCode\nlibrary(CalledStrike)\n\n\nLoading required package: shiny\n\n\nLoading required package: baseballr\n\n\nLoading required package: mgcv\n\n\nLoading required package: nlme\n\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\n\nThis is mgcv 1.8-42. For overview type 'help(\"mgcv-package\")'.\n\n\nLoading required package: metR\n\n\n\nAttaching package: 'metR'\n\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\n\nCode\n#ShinyDemo()\n\n\nThis example is the Pitch_Locations example from byaesball’s CalledStrike Github Repository\n\nIntroduction\nThere are three functions for visualizing pitch locations.\n\nThe function location_compare() will graph the pitch location for a data frame or list of data frames.\nThe function location_count() will show the locations of pitches for a specific pitcher on a particular count.\nThe function location_count_compare() will graph the pitch locations for a specific pitcher for several values of the count.\n\n\n\nData\nThe package includes the dataset sc_pitchers_2019 that contains Statcast data for 20 pitchers for the 2019 season.\n\n\nPitch Locations for a List\nSuppose we want to compare the locations of the fastballs thrown by Aaron Nola and Trevor Bauer.\nI find the subset of data I need and then create a list dividing the data by pitcher.\n\n\nCode\nd <- filter(sc_pitchers_2019, \n            pitcher %in% c(605400, 545333),\n            pitch_type == \"FF\")\nds <- split(d, d$pitcher)\nnames(ds) <- c(\"Bauer\", \"Nola\")\n\n\nNow we can construct the graph.\n\n\nCode\nlocation_compare(ds)\n\n\nWarning: Removed 22 rows containing non-finite values\n(`stat_density2d_filled()`).\n\n\n\n\n\n\n\nPitch Locations for a Specific Count\nSuppose we want to look at the locations of Aaron Nola’s pitches on a 0-0 count. I can find Nola’s MLBAM id number by use of the chadwick dataset (also included in the package) that contains the id numbers for all players.\n\n\nCode\nchadwick %>% \n  filter(name_last == \"Nola\", name_first == \"Aaron\")\n\n\n  name_first name_last key_mlbam\n1      Aaron      Nola    605400\n\n\nTo produce the graph, type\n\n\nCode\nlocation_count(sc_pitchers_2019, \n               605400, \"Aaron Nola\", \"0-0\")\n\n\nWarning: Removed 4 rows containing non-finite values\n(`stat_density2d_filled()`).\n\n\n\n\n\n\n\nPitch Locations Across a Group of Counts\nSuppose we want to compare Nola’s pitch locations across the counts “0-0”, “1-0”, “0-1”, “0-2”\n\n\nCode\nlocation_count_compare(sc_pitchers_2019, \n               605400, \"Aaron Nola\", \n               \"R\", \"Offspeed\", \n               c(\"0-0\", \"1-0\", \"0-1\", \"0-2\"))\n\n\nWarning: Removed 4 rows containing non-finite values\n(`stat_density2d_filled()`).\n\n\n\n\n\nEND"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first time I will be hosting a blog. This is mainly going to be about my attempts at data science and data visualization and a steady journey through while I get better each step of the way, of course, with my Professor’s help and weekend zoom calls! Stick with me, and let’s get out of the comfort zone!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/BCB 520 FinalsPortfolio/index.html",
    "href": "posts/BCB 520 FinalsPortfolio/index.html",
    "title": "BCB 520- Finals Portfolio Post",
    "section": "",
    "text": "This is a post that would serve as my assessment for finals in this course. It basically encompasses application of knowledge of visualizing spatial data and possibly exploring interactive visualization tools."
  },
  {
    "objectID": "posts/BCB 520 FinalsPortfolio/index.html#preamble",
    "href": "posts/BCB 520 FinalsPortfolio/index.html#preamble",
    "title": "BCB 520- Finals Portfolio Post",
    "section": "PREAMBLE",
    "text": "PREAMBLE\nIt is a common occurrence for people to use alcohol, and many cultures and societies include it in their social and religious customs. Alcohol abuse, on the other hand, can have detrimental effects on people’s health, cause accidents, and cause social harm. Therefore, it is crucial for study to understand patterns of alcohol consumption and the variables that affect them.\nThe data set contains information on the overall amount of pure alcohol consumed as well as rates for beer, wine, and spirits. We can learn more about the patterns and trends of alcohol consumption in various nations,by exploring this data set."
  },
  {
    "objectID": "posts/BCB 520 FinalsPortfolio/index.html#data",
    "href": "posts/BCB 520 FinalsPortfolio/index.html#data",
    "title": "BCB 520- Finals Portfolio Post",
    "section": "DATA",
    "text": "DATA\nThe clean data set was obtained from FiveThirtyEight’s GitHub repository referenced to be sourced from the World Health Organisation, Global Information System on Alcohol and Health (GISAH), 2010."
  },
  {
    "objectID": "posts/BCB 520 FinalsPortfolio/index.html#visualizations",
    "href": "posts/BCB 520 FinalsPortfolio/index.html#visualizations",
    "title": "BCB 520- Finals Portfolio Post",
    "section": "VISUALIZATIONS",
    "text": "VISUALIZATIONS\nFigure 1 is a map showing visualizing the data which represents patterns of beer, spirit and wine consumption, indicative of the alcohol consumption across different countries\n\n\nCode\nlibrary(ggplot2)\nlibrary(maps)\nsuppressPackageStartupMessages(library(dplyr))\nlibrary(viridisLite)\n\n\ndata <- read.csv(\"alcohol consumption.csv\")\n\n\ndata <- distinct(data, country, .keep_all = TRUE)\n\n\nworld_map <- map_data(\"world\")\n\n\nmerged_data <- merge(world_map, data, by.x = \"region\", by.y = \"country\")\n\n\nplot <- suppressWarnings({\n  ggplot(merged_data, aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = beer_servings), color = \"white\", size = 0.1) +\n  geom_polygon(aes(fill = spirit_servings), color = \"white\", size = 0.1) +\n  geom_polygon(aes(fill = wine_servings), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(name = \"Servings\",\n                       option = \"D\",\n                       begin = 0.1, end = 0.9, \n                       direction = -1,\n                       guide = guide_colorbar(title.position = \"top\", \n                                              title.hjust = 0.5, \n                                              label.hjust = 0.5,\n                                              barwidth = 20, barheight = 0.5,\n                                              ticks = TRUE, nbin = 20)) +\n  labs(title = \"Alcohol consumption across countries\",\n       caption = \"Figure 1: Pattern of beer, spirit and wine servings\",\n       fill = \"Servings (per capita)\") +\n  theme_void()\n\n})\n\nplot <- plot + theme(legend.position = \"bottom\")\n\n\nprint(plot)\n\n\n\n\n\nFollowing this, Figures 2 to 4 break up the different types of alcohol (beer, spirit and wine) respectively, and represents their pattern of consumption across the different countries as indicated in the data.\n\n\nCode\nlibrary(ggplot2)\nlibrary(maps)\nlibrary(dplyr)\nlibrary(viridisLite)\n\n\ndata <- read.csv(\"alcohol consumption.csv\")\n\n\ndata <- distinct(data, country, .keep_all = TRUE)\n\n\nworld_map <- map_data(\"world\")\n\n\nmerged_data <- merge(world_map, data, by.x = \"region\", by.y = \"country\")\n\n\nplot_beer <- suppressWarnings(ggplot(merged_data, aes(x = long, y = lat, group = group))) +\n  geom_polygon(aes(fill = beer_servings), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(name = \"Beer Servings\",\n                       option = \"D\",\n                       begin = 0.1, end = 0.9, \n                       direction = -1,\n                       guide = guide_colorbar(title.position = \"top\", \n                                              title.hjust = 0.5, \n                                              label.hjust = 0.5,\n                                              barwidth = 20, barheight = 0.5,\n                                              ticks = TRUE, nbin = 20)) +\n  labs(title = \"Beer consumption by country\",\n       caption = \"Figure 2: Pattern of beer servings\",\n       fill = \"Beer Servings (per capita)\") +\n  theme_void()\n\nplot_beer <- plot_beer + theme(legend.position = \"bottom\")\n\n\nprint(plot_beer)\n\n\n\n\n\nCode\nplot_spirit <- suppressWarnings(ggplot(merged_data, aes(x = long, y = lat, group = group))) +\n  geom_polygon(aes(fill = spirit_servings), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(name = \"Spirit Servings\",\n                       option = \"D\",\n                       begin = 0.1, end = 0.9, \n                       direction = -1,\n                       guide = guide_colorbar(title.position = \"top\", \n                                              title.hjust = 0.5, \n                                              label.hjust = 0.5,\n                                              barwidth = 20, barheight = 0.5,\n                                              ticks = TRUE, nbin = 20)) +\n  labs(title = \"Spirit consumption by country\",\n       caption = \"Figure 3: Pattern of spirit servings\",\n       fill = \"Spirit Servings (per capita)\") +\n  theme_void()\n\n\nplot_spirit <- plot_spirit + theme(legend.position = \"bottom\")\n\n\nprint(plot_spirit)\n\n\n\n\n\nCode\nplot_wine <- suppressWarnings(ggplot(merged_data, aes(x = long, y = lat, group = group))) +\n  geom_polygon(aes(fill = wine_servings), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(name = \"Wine Servings\",\n                       option = \"D\",\n                       begin = 0.1, end = 0.9, \n                       direction = -1,\n                       guide = guide_colorbar(title.position = \"top\", \n                                              title.hjust = 0.5, \n                                              label.hjust = 0.5,\n                                              barwidth = 20, barheight = 0.5,\n                                              ticks = TRUE, nbin = 20)) +\n  labs(title = \"Wine consumption by country\",\n       caption = \"Figure 4: Pattern of wine servings\",\n       fill = \"Wine Servings (per capita)\") +\n  theme_void()\n\n\nplot_wine <- plot_wine + theme(legend.position = \"bottom\")\n\n\nprint(plot_wine)\n\n\n\n\n\nCode\nlibrary(cowplot)\n\n\nFigure 5 however, not so different in principle from the other figures represents the data on an interactive map, providing an opportunity for further exploration of the data by zooming in and out, clicking on certain markers to view additional information. This representation was based on the total liters of pure alcohol by region.\nTwo base map layers are represented here: the World Imagery base map layer (which may make it easier to see the geographic patterns in alcohol consumption) and the Toner Lite base map layer (which may make it easier to see the relative differences in alcohol consumption) between regions\n\n\nCode\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(leaflet)\nlibrary(htmltools)\n\nsuppressMessages({\n\nmerged_data %>% \n  leaflet() %>% \n  addProviderTiles(providers$Stamen.TonerLite, group = \"Toner Lite\") %>% \n  addProviderTiles(providers$Esri.WorldImagery, group = \"World Imagery\") %>% \n  addLayersControl(baseGroups = c(\"World Imagery\", \"Toner Lite\")) %>% \n  addMarkers(label = merged_data$region, \n             clusterOptions = markerClusterOptions(), \n             popup = merged_data$total_litres_of_pure_alcohol) %>% \n  htmltools::tags$h1(\"Figure 5: Total litres of pure alcohol by region\",\n        style = \"font-size: 12px; font-weight: normal; text-align: center;\") %>% \n  htmlwidgets::onRender(\"\n      function(el, x) {\n          $(el).append('<div class=\\\"leaflet-control leaflet-caption\\\">Source: FiveThirtyEight</div>');\n      }\n  \")\n\n})  \n\n\n\n\n\nFigure 5: Total litres of pure alcohol by region"
  },
  {
    "objectID": "posts/BCB 520 FinalsPortfolio/index.html#conclusions",
    "href": "posts/BCB 520 FinalsPortfolio/index.html#conclusions",
    "title": "BCB 520- Finals Portfolio Post",
    "section": "CONCLUSIONS",
    "text": "CONCLUSIONS\nAlcohol consumption varies significantly per region around the world, as the map illustrates. For instance, Europe typically has greater alcohol consumption rates than Africa or Asia. This shows that social and cultural factors have a big impact on how people behave when they drink. The most widely consumed form of alcohol worldwide is beer, which is depicted on the map as being more popular than wine or spirits in most nations.\nThe nations with high alcohol consumption levels have been associated with relatively high GDP per capita, like the United States and Canada. This suggests that there may be a relationship between alcohol use and economic issues. This implies that economic circumstances and drinking habits can be related although extensive data is required to establish this.\nOverall, this information may be useful for policymakers, health professionals, and others interested in encouraging responsible drinking and lessen the negative effects of alcohol consumption.\nOne profound limitation of this data set is that it does not consider demographic factors in relation to alcohol use and possible risk factor predictions of alcohol use which would be very essential information."
  },
  {
    "objectID": "posts/MarksChannels/index.html",
    "href": "posts/MarksChannels/index.html",
    "title": "Assignment 4",
    "section": "",
    "text": "The data used in this assignment is an existent dataset, available as a package (USArrests) in ‘R studio’ software. It provides information on violent crime rates by US state. The data set contains information on arrests for assault, murder, and rape in 6 six US states per 100,000 residents. It also provides information on proportion of population living in urban areas. This dataset provides originally provides information on 50 states. However, for the purpose of this assignment, I modified the data to use 6 states. (PS: states were chosen at random with no special criteria or basis)\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(readxl)\n\n\n\n\nCode\nlibrary(reshape2)\n\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n\nCode\nlibrary(ggplot2)\n\n\nData frame\nA data frame was created to be able to make it easy for coding to plot the grouped bar chart as intended\n\n\nCode\ndf <- data.frame(State= c(\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\"), Murder = c(13.2,10,8.1,8.8,9,7.9), Assault = c(236,263,294,190,276,204), UrbanPop = c(58,48,80,50,91,78), Rape = c(21.2,44.5,31,19.5,40.6,38.7))\n\n\n\n\nCode\nprint(df)\n\n\n       State Murder Assault UrbanPop Rape\n1    Alabama   13.2     236       58 21.2\n2     Alaska   10.0     263       48 44.5\n3    Arizona    8.1     294       80 31.0\n4   Arkansas    8.8     190       50 19.5\n5 California    9.0     276       91 40.6\n6   Colorado    7.9     204       78 38.7\n\n\nMelting data\nThis was done to organize the data frame into an elongated format\n\n\nCode\ndata.m <- melt(df, id.vars = 'State')\n\n\n\n\nCode\nprint(data.m)\n\n\n        State variable value\n1     Alabama   Murder  13.2\n2      Alaska   Murder  10.0\n3     Arizona   Murder   8.1\n4    Arkansas   Murder   8.8\n5  California   Murder   9.0\n6    Colorado   Murder   7.9\n7     Alabama  Assault 236.0\n8      Alaska  Assault 263.0\n9     Arizona  Assault 294.0\n10   Arkansas  Assault 190.0\n11 California  Assault 276.0\n12   Colorado  Assault 204.0\n13    Alabama UrbanPop  58.0\n14     Alaska UrbanPop  48.0\n15    Arizona UrbanPop  80.0\n16   Arkansas UrbanPop  50.0\n17 California UrbanPop  91.0\n18   Colorado UrbanPop  78.0\n19    Alabama     Rape  21.2\n20     Alaska     Rape  44.5\n21    Arizona     Rape  31.0\n22   Arkansas     Rape  19.5\n23 California     Rape  40.6\n24   Colorado     Rape  38.7\n\n\nI am going to attempt to use marks and channels to visualize the data set using the figures below (Figure.1 and Figure.2) to support and explain the key parameters: Expressiveness and effectiveness, Discriminability, Separability, and Popout, as much as possible.\nFigure. 1\nVisualization adequately describing essential marks and channels\n\n\nCode\nggplot(data.m, aes(State, value)) + geom_bar(aes(fill = variable), \n   width = 0.8, position = position_dodge(width=0.8), stat=\"identity\") +  \n    theme(legend.position=\"top\", legend.title = \n   element_blank(),axis.title.x=element_blank(), \n   axis.title.y=element_blank())\n\n\n\n\n\nFigure. 2\nInappropriate visualization to describe marks and channels\n\n\nCode\nggplot(data.m, aes(State,value, col=variable)) + \n  geom_point() + \n  stat_smooth() \n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nExpressiveness and effectiveness:\nFigure.1 clearly expresses all of the information in the dataset and explicitly provides information on the data at a glance. This grouped bar plot is the best (most effective) visualization because most importantly, the data set is ordered. in additon to that, it shows the variables (crimes) grouped per state as respresented in the data set for easy understanding.\nOn the other hand, Figure. 2, is an inappropriate visualization because it is not expressive and definetely not the most effective representation of the data. The idea is that at a glance the viewer should be able to understand the described data. And this does not meet that requirement.\nDiscriminability\nThis simply asks the question whether ‘differences in items are perceptible to the viewer as intended’. From Figure.1, we can see that the differences in crime rates across states are easily noticed and therefore quite a good represenation of discriminability.\nHowever, Figure. 2 does not explicitly meet that requirement by not showing the differences in variables clearly and thus, not a good visualization.\nSeparability\nThis emphasizes avoidance of ‘unanticipated combination’. In that, the viewer should be able to separate one channel from the other. In my understanding of this, Figure. 1 adequately represents this by separating the various variables from one state to the other.\nFigure. 2, however, does not do this. Rather, it seems to cram the variables together and does not exactly provide clear distinction among the variables.\nPopout\nThe description seeks to make the viewer see the clear differences in visualization of any given data set easily. In that, distinct items immediately stand out from the others.\nIn Figure. 1, the rates of various variables standout evidently at a a glance unlike in Figure.2 where the visualization confuses viewer on the message it intends portraying.\nTextbook Reference:\nMunzner, T. (2014). Visualization Analysis and Design. Boca Raton, FL: CRC Press, Taylor and Francis Group."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ronald’s BCB504 Portfolio",
    "section": "",
    "text": "BCB 520- Finals Portfolio Post\n\n\nGlobal alcohol consumption patterns\n\n\n\n\nData\n\n\nVisualizations\n\n\n\n\nInteresting insights into variations of popular and preferred alcoholic beverages among nations\n\n\n\n\n\n\nMay 4, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\n  \n\n\n\n\nPractice with Network Data\n\n\nNodes and Links and edges and vertices…\n\n\n\n\nPortfolio\n\n\nDataViz\n\n\nNetwork\n\n\niGraph\n\n\nAssignment\n\n\n\n\niGRAPH!\n\n\n\n\n\n\nApr 19, 2023\n\n\nBarrie Robison\n\n\n\n\n\n\n  \n\n\n\n\nPractice with Spatial Data\n\n\nMalaria, Ocean Currents, Baseball…\n\n\n\n\nPortfolio\n\n\nDataViz\n\n\nSpatial\n\n\nGGPlot\n\n\nAssignment\n\n\n\n\nMaps and Spatial Fields are fun!\n\n\n\n\n\n\nApr 10, 2023\n\n\nBarrie Robison\n\n\n\n\n\n\n  \n\n\n\n\nBCB 520- Midterm Portfolio Post\n\n\nAviation safety\n\n\n\n\nData\n\n\nVisualizations\n\n\n\n\nAssessment of safety in the aviation industry to boost client confidence\n\n\n\n\n\n\nMar 25, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 5\n\n\nVisualizations for Tabular Data\n\n\n\n\nAssignment\n\n\nDataViz\n\n\nTables\n\n\nScatterplot\n\n\nBarplot\n\n\nPiechart\n\n\n\n\nIs trading a first-round pick for two second-round picks and a third-round pick prudent?\n\n\n\n\n\n\nMar 7, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 4\n\n\nMarks and Channels\n\n\n\n\nAssignment\n\n\nDataViz\n\n\n\n\nExploring variable combinations of marks and channels for BCB 504\n\n\n\n\n\n\nFeb 14, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment2\n\n\nBCB 504 - Foundations of Data Visualization\n\n\n\n\n\n\n\n\n\nJan 30, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssignment 3\n\n\nBCB 504 - Foundations of Data Visualization\n\n\n\n\n\n\n\n\n\nJan 30, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 30, 2023\n\n\nRonald Bentil\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Ronald’s BCB504 Portfolio",
    "section": "",
    "text": "I am a first year PhD student and a Graduate Research Assistant in Dr. Shirley Luckhart’s Lab (https://luckhartlab.com/)\nEmail: bent4061\nOffice: Life Sciences South, Room 223"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Ronald’s BCB504 Portfolio",
    "section": "Education",
    "text": "Education\nUniversity of Idaho || Moscow, Idaho\nPhD in Entomology (01/2023 to Present)\nUniversity of Ghana || Legon, Accra\nMPhil in Applied Parasitology (08/2019 to 12/2022)\nUniversity of Ghana || Legon, Accra\nBsc in Biochemistry, Cell and Molecular Biology (09/2013 to 06/2017)"
  }
]